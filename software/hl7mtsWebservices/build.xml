<?xml version="1.0"?>

<!--L
  Copyright SAIC.

  Distributed under the OSI-approved BSD 3-Clause License.
  See http://ncip.github.com/caadapter/LICENSE.txt for details.
L-->

<!-- 
	************************************************************************** 
                     caAdapter WEBSERVICES module                          
	************************************************************************** 
-->
<project name="caadapterWS" default="build" basedir=".">
	<description>
		webservices
	</description>	
  
  <!-- Define project properties !-->
  <property name="ws.module.home" value="${basedir}"/>
  <property name="ws.module.name" value="${ant.project.name}"/>
  <property name="module.build.dir" value="${ws.module.home}/build"/>
  <property name="module.dist.dir" value="${ws.module.home}/dist"/>
  <property name="module.lib.dir" value="${ws.module.home}/lib"/>
  <property name="module.conf.dir" value="${ws.module.home}/conf"/>
  <property name="module.etc.dir" value="${ws.module.home}/etc"/>
  <property name="module.src.dir" value="${ws.module.home}/src"/>
  <property name="root" value="${ws.module.home}/../../"/>

  
  <path id="module.class.path">
  	<fileset dir="${module.lib.dir}">
  		<include name="**/*.jar"/>
  		<include name="**/*.zip"/>
  	</fileset>
  	<fileset dir="${ws.module.home}/WebRoot/WEB-INF/lib">
	  		<include name="**/*.jar"/>
	  		<include name="**/*.zip"/>
  	</fileset>
  	<fileset dir="${root}/components/hl7Transformation/dist/">
  		<include name="**/*.jar"/>
  	</fileset>
  	<fileset dir="${root}/dist/lib">
  		<include name="**/*.jar"/>
  	</fileset>
  </path>

  <target name="compile.source" description="compile the source">
  	<javac destdir="${module.build.dir}" target="${project.build.target.version}"
  		classpathref="module.class.path"
  		   fork="yes" debug="on">
 		<!-- src path="${module.gencode.dir}"/ -->
 		<src path="${module.src.dir}"/>
  		<exclude name="test/**"/>
  	</javac>
   </target>
   
  <target name="init">
      	<echo message="-------- initialize ${ws.module.name}  --------"/>
      	<mkdir dir="${module.build.dir}"/>
	  	<mkdir dir="${module.dist.dir}"/>
  </target>
  
  <target name="clean">
  	<echo message="-------- clean ${ws.module.name}  --------"/>
      	<delete dir="${module.build.dir}"/>
      	<delete dir="${module.dist.dir}"/>
      	<delete dir="${module.gencode.dir}"/>
  </target>

	<!-- ****************************************** -->
	<!-- BEGIN: Variables used for the distribution -->
	<!-- ****************************************** -->
	<property name="dist_root" location="dist"/>
	<property name="dist_ws_dir" location="${dist_root}"/>
	<property name="deploy_dir" value="${dist_root}/deploy"/>
	<property name="dist_ws_file_name" value="${root}/components/webservices/dist/caAdapterWS.war"/>
	<zipfileset dir="${ws.module.home}/axislib" prefix="WEB-INF/lib" id="dist.ws.axis.libs">
		<include name="**/*.jar"/>
		<exclude name="**/log4*.*"/>
	</zipfileset>
	<zipfileset dir="${ws.module.home}/WebRoot" id="dist.ws.web.root">
		<include name="**/*.*"/>
		<exclude name="**/*data.zip"/>
		<exclude name="**/*server-config.wsdd.template"/>
	</zipfileset>
	<zipfileset dir="${ws.module.home}/build/" prefix="WEB-INF/classes" id="dist.ws.web.classes">
		<include name="**/*.class"/>
	</zipfileset>
	<zipfileset dir="${ws.module.home}/src/" prefix="WEB-INF/classes" id="dist.ws.web.properties">
			<include name="**/*.properties"/>
	</zipfileset>

	<zipfileset dir="${module.lib.dir}" prefix="WEB-INF/lib" id="dist.ws.module.libs">
		<include name="**/*.jar"/>
		<include name="**/*.zip"/>
		<exclude name="servlet.jar"/>
	</zipfileset>

	<zipfileset dir="${root}/lib/" prefix="WEB-INF/lib" id="dist.root.libs">
		<include name="castor-0.9.9.jar"/>
		<include name="knuHL7V2tree.jar"/>
		<include name="cmps.jar"/>		
		<include name="jaxb-api.jar"/>	
		<include name="jsr173_1.0_api.jar"/>
		<include name="saxon8.jar"/>
		<include name="xercesImpl.jar"/>
		<include name="xml-apis.jar"/>
	</zipfileset>
	
	<zipfileset dir="${root}/components/hl7Transformation/lib" prefix="WEB-INF/lib" id="dist.root.hl7.libs">
			<include name="*.jar"/>
		</zipfileset>
	<zipfileset dir="${root}/referenceLib" prefix="WEB-INF/lib" id="dist.root.ref.libs">
		<include name="caAdapter.jar"/>
	</zipfileset>
	
	<zipfileset dir="${root}/etc/map/functions" includes="core.fls" prefix="map/functions/" id="dist.root.function.file"/>
	<zipfileset dir="${ws.module.home}/dist" includes="function.jar" prefix="WEB-INF/lib" id="dist.root.functions.lib"/>

	<!-- **************************************** -->
	<!-- END: Variables used for the distribution -->
	<!-- **************************************** -->

	<!-- initialize the distribution process.-->
	<target name="dist_init" depends="clean,init,compile.source" description="Some setup stuff before building a distribution.">
		<mkdir dir="${dist_ws_dir}"/>
		<!-- Remove the previous distribution files, if exist -->
		<echo message="remove old distribuation files"/>
		<delete>
			<fileset dir="${dist_ws_dir}" casesensitive="false">
				<patternset includes="$*.war"/>
			</fileset>
		</delete>
		<copy overwrite="true" file="${ws.module.home}/WebRoot/WEB-INF/server-config.wsdd.template" tofile="${ws.module.home}/WebRoot/WEB-INF/server-config.wsdd">
			<filterset>
				<filter token="DATA_DIR" value="${data_dir}"/>
			</filterset>
		</copy>
	</target>


	<!-- generate the binary distribution.-->
	<target name="dist_bin"
			description="Zipup the binary distribution (see 'dist_init', this is not called explicitly)."
			>
		<echo message="** Generating the Binary Distribution w/o MIFs."/>
		<zip destfile="${ws.module.home}/dist/function.jar">
			<zipfileset refid="dist.root.function.file"/>
		</zip>
		
		<zip destfile="${dist_ws_file_name}">
			<!-- Common to both source and binary distribution. -->
			<zipfileset refid="dist.ws.axis.libs"/>
			<zipfileset refid="dist.ws.web.root"/>
			<zipfileset refid="dist.ws.web.classes"/>
			<zipfileset refid="dist.ws.web.properties"/>
			<zipfileset refid="dist.ws.module.libs"/>
			<zipfileset refid="dist.root.libs"/>
			<zipfileset refid="dist.root.hl7.libs"/>
			<zipfileset refid="dist.root.ref.libs"/>
			<zipfileset refid="dist.root.functions.lib"/>
		</zip>
	</target>



	<!-- Create the ${version_number_dot_format} distributions. -->
	<target name="build" description="Create Web Service distributions.">
		<!-- setup all the files.-->
		<antcall target="dist_init"/>
		<!-- zip up the binary distribution.-->
		<antcall target="dist_bin"/>
	</target>

</project>
