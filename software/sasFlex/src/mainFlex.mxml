<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:fmath="http://www.fmath.info" 
			   applicationComplete="init(), customizedLoading()" 
			   layout="horizontal" 
			   width="100%" height="100%" minWidth="955" minHeight="600">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:XMLListCollection id="localFormulaTreeDP" source="{localStoreXML.elements('math')}"/>
 
		<mx:XMLListCollection id="commonFormulaTreeDP" source="{commonStoreXML.elements('math')}" />
		<!-- fx:XML id="myXML" source="http://flepstudio.org/FlashBuilder/tut_8/XML/test.xml" / -->
		<fx:XML id ="localStoreXML" source="../bsaFormulae.xml"/>
		<fx:XML id ="commonStoreXML" source="../commonFormulae.xml"/>
		
		<mx:XMLListCollection id="menuData">
			<fx:XMLList>
				<menuitem label="MenuItem A"/>
				<menuitem label="MenuItem B"/>
				<menuitem label="MenuItem C"/>
			</fx:XMLList>
		</mx:XMLListCollection>
	</fx:Declarations>
	<fx:Script >
		<![CDATA[
		import mx.collections.ICollectionView;
		import mx.controls.Alert;
		import mx.controls.Menu;
		import mx.events.ListEvent;
		import mx.collections.XMLListCollection;
		//Display tree node
		private function treeMathLabel(item:Object):String {
			var node:XML = XML(item);
			if( node.localName() == "math" )
			{
				if (node.attribute('title').length()>0)
					return	node.@title;
			}
			else if (node.attribute('name').length()>0)
				return node.@name;
			
			return node.name();
			
		}

		// handle tree selection event		 
		private function tree_itemClick(tree:Tree, evt:ListEvent):void {
			var item:Object = Tree(evt.currentTarget).selectedItem;
			editorId.mainPannel.setMathML(item+"");
			textareaId.text = editorId.mathML;
			if (tree.dataDescriptor.isBranch(item)) {
				tree.expandItem(item, !tree.isItemOpen(item), true);
			}
		}
			
		// Show popup menu TO-BE-DONE
		private function createAndShow():void
		{
			var myMenu:Menu = new Menu();
			myMenu.dataProvider = menuData;
			myMenu.labelField = "@label";
			myMenu.showRoot = false;
			// calling display() here has no result, because the data provider
			// has been set but the underlying NativeMenu hasn't been created yet.
//			myMenu.show(this.stage, 10, 10);
			Alert.show(commonStoreXML, "menitem");
			
		}

		protected function customizedLoading():void
		{
			editorId.mainPannel.name= "<a href=\'http://ncicb.nci.nih.gov/\'>NCI Center for Biomedical Informatics & Information Technology - Scientific Algorithm Service</a>";
			editorId.mainPannel.draw();
			commonFormulae.expandItem(commonFormulaTreeDP.getItemAt(0), true);
			localFormulae.expandItem(localFormulaTreeDP.getItemAt(0), true);
//			Alert.show(localStoreXML.name(), "testingMesag");
		}
		protected function getMathML(event:MouseEvent):void
		{
			textareaId.text = editorId.mathML
		}
		protected function setMathML(event:MouseEvent):void
		{
			editorId.mathML = textareaId.text;
		}
		protected function initEditor():void
		{
			editorId.setConfiguration("fontList", "Arial,fraktur");
			//editorId.setConfiguration("defaultFont", "fraktur");
			editorId.setConfiguration("defaultFontSize", "40");
			editorId.setConfiguration("defaultBold", "true");
			editorId.setConfiguration("defaultItalic", "true");
			editorId.setConfiguration("defaultForegroundColor", "red");
			//				editorId.setConfiguration("enableClose", "true");
			//				editorId.setConfiguration("disableSave", "false");
			//				editorId.setConfiguration("enableOpen", "false");
		}
		
		protected function saveImageToServer(event:MouseEvent):void{
			editorId.saveImageOnServer("JPG", 100, callbackName);
		}
		
		protected function callbackName(name:String):void{
			textareaId.text = "Image url: " + name;
		}
		protected function viewImageInBrowser(event:MouseEvent):void{
			editorId.viewImageInBrowser("JPG", 100);
		}
		
		]]>
	</fx:Script>


	<mx:VBox id="editorBox" horizontalAlign="center">	
		<mx:Label id="welcomeLB"
				  textAlign="center"
					fontSize="16" width="100%"
					text="NCI Center for Biomedical Informatics and Information Technology"/>		
		<mx:Label id="welcomeName"
				  textAlign="center"
				  fontSize="28" width="100%"
				  text="Scientific Algorithm Service"/>		
		
		<mx:HBox id="frameBox" verticalAlign="top"  horizontalGap="0">
			<mx:VBox height="100%" verticalGap="0" minWidth="150"  autoLayout="true"> 
				<mx:Tree id="localFormulae"    
						 dataProvider="{localFormulaTreeDP}"
						 labelFunction="treeMathLabel" 
 						 showRoot="true"
						 itemClick="tree_itemClick(localFormulae,event);" 
						 doubleClick="createAndShow();"
						 width="100%" height="100%"  borderColor="#FF0000"
						 borderStyle="solid" paddingTop="10" paddingBottom="0" paddingLeft="10" paddingRight="10"/>						 

				<mx:Tree id="commonFormulae" 
						 dataProvider="{commonFormulaTreeDP}"
						 labelFunction="treeMathLabel"
						 showRoot="true" 
						 itemClick="tree_itemClick(commonFormulae,event);"
						 creationComplete=";"
						 width="100%" height="100%"  borderColor="#000000"
						 borderStyle="solid" paddingTop="0" paddingBottom="10" paddingLeft="10" paddingRight="10"/>
			</mx:VBox>
			<mx:VBox  horizontalAlign="left" backgroundColor="#eeeeee" borderColor="#000000" borderStyle="solid" paddingTop="10" paddingBottom="5" paddingLeft="10" paddingRight="5" id="formulaBox">	
				<fmath:MathMLEditor id="editorId" editorWidth="800" editorHeight="500"  initialize="initEditor()">
					<fmath:mathML><![CDATA[<mrow><mtext>abc</mtext></mrow>]]></fmath:mathML>	
				</fmath:MathMLEditor>				
				<mx:VBox>
					<mx:HBox horizontalAlign="center">
						<mx:Button click="getMathML(event)" label="get MathML from component"/>
						<mx:Button click="setMathML(event)" label="set MathML to component"/>
					</mx:HBox>
					<mx:TextArea width="800" height="250" editable="true" id="textareaId" borderColor="#7AD2E2" wordWrap="false"/>
					<mx:HBox>
						<!-- mx:ComboBox editable="false" selectedIndex="1">
							<mx:ArrayCollection>
								<fx:String>Value 1</fx:String>
								<fx:String>Value 2</fx:String>
								<fx:String>Value 3</fx:String>
							</mx:ArrayCollection>
						</mx:ComboBox -->
						<mx:Button click="saveImageToServer(event)" label="Save formula to server"/>
						<mx:Button click="viewImageInBrowser(event)" 
								   enabled="false" label="View formula image in browser"/>				
					</mx:HBox>
				</mx:VBox>
			</mx:VBox>
		</mx:HBox>
	</mx:VBox>
</mx:Application>
