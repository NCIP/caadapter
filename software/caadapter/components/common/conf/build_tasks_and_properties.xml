		<!-- JAVASig specific variables. -->
<property name="javasig" location="${basedir}\..\javasig"/>
<property name="javasig_build" location="${javasig}/build"/>
<property name="javasig_lib" location="${javasig}/lib"/>
<property name="javasig_hmd" location="${javasig}/data/hmd207"/>
<property name="javasig_mif" location="${javasig}/data/mif207"/>
<property name="javasig_schema_location" location="${javasig}/data/schemas207"/>
<property name="javasig_etc" location="${javasig}/etc"/>
<property name="javasig_api" location="${javasig}/doc/api"/>
<property name="javasig_jarfile" location="jsig.jar"/>
<property name="gjc-rt" location="${javasig_lib}/gjc-rt.jar"/>

		<!--Common Values for the Application -->
<property name="distribution_app_name" value="caAdapter"/>
<property name="version_number_dot_format" value="3.2"/>
<property name="version_number_underscore_format" value="3_2"/>

<property name="caBIO_libs" value="**/caBIO/**/*.*"/>

		<!-- HL7SDK development directory variables. -->
<property name="hl7sdk_src" value="src"/>
<property name="hl7sdk_src_test" location="src/test"/>
<property name="hl7sdk_src_gencode" value="src/gencode"/>
<property name="hl7sdk_build" location="build"/>
<property name="hl7sdk_doc" location="docs"/>
<property name="hl7sdk_doc_1_2" location="${hl7sdk_doc}/v${version_number_underscore_format}"/>
		<!--<echo message="here it is: '${hl7sdk_doc_1_2}'"/>-->
<property name="hl7sdk_javadoc" location="docs/api"/>
<property name="hl7sdk_lib" location="lib"/>
<property name="hl7sdk_license" location="license"/>
<property name="hl7sdk_out" location="out"/>
<property name="hl7sdk_etc" location="etc"/>
<property name="hl7sdk_images" value="images"/>
<property name="hl7sdk_map" location="map"/>
<property name="hl7sdk_functions" location="${hl7sdk_map}/functions"/>
<property name="hl7sdk_analysis_instances" location="analysis/Updated Instances"/>
<property name="v2Meta_location" location="data/v2Meta"/>

		<!-- HL7SDK distribution directory variables. -->
<property name="hl7sdk_dist" location="dist"/>
<property name="hl7sdk_dist_hl7sdk" location="dist/HL7SDK"/>
<property name="hl7sdk_dist_lib" location="${hl7sdk_dist_hl7sdk}/lib"/>
<property name="hl7sdk_dist_doc" location="${hl7sdk_dist_hl7sdk}/docs"/>
<property name="hl7sdk_dist_mif" location="${hl7sdk_dist_hl7sdk}/mif"/>
<property name="hl7sdk_dist_xml" location="${hl7sdk_dist_hl7sdk}/xml"/>
<property name="hl7sdk_dist_schema" location="${hl7sdk_dist_hl7sdk}/schema/schemas"/>
<property name="hl7sdk_dist_etc" location="${hl7sdk_dist_hl7sdk}/etc"/>
<property name="hl7sdk_dist_data" location="${hl7sdk_dist_hl7sdk}/data"/>

		<!-- Variables for CASTOR GENERATED CLASSES -->
<property name="castor_binding_file" value="./castorbinding.xml"/>
<property name="mappingspec_schema" value="./map/MappingV1.3.xsd"/>
<property name="mappingspec_package" value="gov.nih.nci.hl7.map.impl"/>
<property name="csvspec_schema" value="./map/csv/csvspecification.xsd"/>
<property name="csvspec_package" value="gov.nih.nci.hl7.csv.meta.impl"/>
<property name="clonespec_schema" value="./map/clone/clonespecification.xsd"/>
<property name="clonespec_package" value="gov.nih.nci.hl7.clone.meta.impl"/>
<property name="dbspec_schema" value="./map/database/dbspecification.xsd"/>
<property name="dbspec_package" value="gov.nih.nci.hl7.database.impl"/>
<property name="functionspec_schema" value="./map/functions/functionspecification.xsd"/>
<property name="functionspec_package" value="gov.nih.nci.hl7.function.impl"/>

		<!-- Variables for CONFIG GENERATED CLASSES -->
<property name="config.dev.xml" value="${hl7sdk_etc}/config-dev.xml"/>
<property name="config.dist.xml" value="${hl7sdk_etc}/config-dist.xml"/>
<property name="config.java.transform" value="${hl7sdk_etc}/config2java.xsl"/>

		<!-- Variables for MESSAGES GENERATED CLASSES -->
<property name="messages.xml" value="${hl7sdk_etc}/messages.xml"/>
<property name="messages.java.transform" value="${hl7sdk_etc}/messages2java.xsl"/>
<property name="gencode.out.file" value="gencode.out"/>

		<!-- Other necessary variables. -->
<property name="java_policy_file" value="./java.policy"/>
<property name="java_logging_file" value="./logging.properties"/>
<property name="cts_properties_file" value="./cts-map.properties"/>
<property name="logging_properties_file" value="./logging.properties"/>
<!--<property name="cmetfile_properties_file" value="./cmet-file.properties"/>-->
<property name="cmetfile_properties_file" value="cmet-file.properties"/>
<property name="gettingstarted_file" value="${hl7sdk_doc}/gettingstarted.txt"/>
<property name="rim_properties_file" value="${javasig}/rim-map.properties"/>
<property name="type_properties_file" value="${javasig}/type-map.properties"/>
<property name="hl7oid_properties_file" value="${javasig}/hl7-oid.properties"/>
<property name="units_xml_file" value="${javasig_build}/units.xml"/>
<property name="rim_file" location="${javasig_etc}/Rim207.xml"/>
<property name="adverse_event_hmd_file" location="${javasig_hmd}/PORR_HD040001.hmd"/>
<property name="adverse_event_mif_file" location="${javasig_mif}/PORR_MT040001.mif"/>
<property name="adverse_event_xml_out_file" value="${hl7sdk_out}/PORR_MT040001_out.xml"/>
<property name="adverse_event_xml_file" value="${javasig_etc}/PORR_MT040001.xml"/>
<property name="adverse_event_xsd_file" value="${javasig_schema_location}/PORR_MT040001.xsd"/>
<property name="adverse_event_messagetype" value="PORR_MT040001"/>

<!-- Classpath for DEVELOPMENT (not the distribution) -->
<path id="development.class.path">
	<!-- HL7SDK + cts classes -->
	<pathelement location="${hl7sdk_build}"/>
	<!-- HL7SDK libs -->
	<fileset dir="${hl7sdk_lib}">
		<include name="**/*.jar"/>
		<!-- following is only needed when jaring or when executing -->
		<!--<include name="${caBIO_libs}"/>-->
		<!--<include name="**/conf/*.*"/>-->
		<!--<include name="**/log/*.*"/>-->
	</fileset>
	<!-- JAVASIG classes, properties file, xml files -->
	<pathelement location="${javasig_build}"/>
	<pathelement location="${javasig_schema_location}"/>
	<pathelement location="${javasig_etc}"/>
	<pathelement location="${javasig_mif}"/>
	<!-- JAVASIG libs -->
	<fileset dir="${javasig_lib}">
		<include name="**/*.jar"/>
		<include name="**/*.zip"/>
	</fileset>
	<!-- what is this and why do we need to explicity put it on the classpath? -->
	<pathelement location="${java.home}/lib/rt.jar"/>
</path>

<!-- Path for running launchui and other runtime target from ant command -->
<path id="runtime.class.path">
	<!--in addition to paths under development.class.path, we need more in order to run EVS -->
	<path refid="development.class.path"/>

	<!-- additional HL7SDK libs from caBIO -->
	<fileset dir="${hl7sdk_lib}">
		<!--<include name="**/*.jar"/>-->
		<!-- following is only needed when jaring or when executing -->
		<include name="${caBIO_libs}"/>
		<!--<include name="**/conf/*.*"/>-->
		<!--<include name="**/log/*.*"/>-->
	</fileset>
</path>


				<!-- Classpath for Distribution (not development) -->
<!-- NOTE: This can be viewed as a temporary variable -->
<!-- NOTE: It is setting up "distribution.manifest.class.property" -->
<path id="distribution.class.path">
    <!-- Distribution directories -->
    <pathelement path="."/>
    <pathelement path="./lib/mif.zip"/>
    <pathelement path="./xml/"/>
	<!-- Our big 3 jars -->
	<pathelement path="./lib/${distribution_app_name}.jar"/>
	<pathelement path="./lib/javasig.jar"/>
	<pathelement path="./lib/cts.jar"/>
    <!-- HL7SDK libs -->
	<fileset dir="${hl7sdk_lib}">
		<include name="**/*.jar"/>
		<include name="${caBIO_libs}"/>
		<!--<include name="**/conf/*.*"/>-->
		<!--<include name="**/log/*.*"/>-->
	</fileset>
	<!-- JAVASIG libs -->
	<fileset dir="${javasig_lib}">
		<include name="**/*.jar"/>
		<include name="**/*.zip"/>
	</fileset>
</path>

<pathconvert pathsep=" " targetos="unix" property="distribution.manifest.class.property"
			 refid="distribution.class.path">
	<!-- make paths relative-->
	<map from="${javasig}" to="."/>
	<map from="${basedir}" to="."/>
</pathconvert>

		<!-- For debugging purposes.-->
<property name="echo.classpath" refid="development.class.path"/>

<target name="all" depends="banner,clean,gencode,compile,regression" description="do everything"/>

		<!-- An introduction.-->
<target name="banner" description="introduction to build">
	<echo message="***********************"/>
	<echo message="** HL7SDK Build file **"/>
	<echo message="***********************"/>
	<echo message="** NOTE: The JavaSIG classes must be built already."/>
	<echo message="*******"/>
	<echo message="** HL7SDK Root     = ${basedir}"/>
	<echo message="** HL7SDK Classes  = ${hl7sdk_build}"/>
	<echo message="** JavaSIG Root    = ${javasig}"/>
	<echo message="** JavaSIG Classes = ${javasig_build}"/>
	<echo message="** CLASSPATH       = ${echo.classpath}"/>
	<echo message="** JAVA HOME       = ${java.home}"/>
	<echo message="***********************"/>
</target>

		<!-- Delete all previous traces of a build.-->
<target name="clean">
	<!-- Delete all the class and javadoc files. -->
	<delete dir="${hl7sdk_build}" quiet="true"/>
	<!--        <delete dir="${hl7sdk_javadoc}" quiet="true"/>-->
	<delete dir="${hl7sdk_out}" quiet="true"/>
	<delete dir="${hl7sdk_src_gencode}" quiet="true"/>

	<!-- Delete all the distributions -->
	<delete>
		<fileset dir="${hl7sdk_dist}" includes="*.zip"/>
	</delete>

	<!-- Delete all files included in the binary distribution. -->
	<delete includeemptydirs="true">
		<!-- Except build.xml (which is saved in CVS) -->
		<fileset dir="${hl7sdk_dist_hl7sdk}" excludes="build.xml,HL7SDK_readme.txt,HL7SDK_releasenote.txt,CVS/**"/>
	</delete>
</target>

		<!-- Development Build. -->
<target name="compile" description="compile everything">
	<antcall target="compile.init"/>
	<antcall target="compile.source"/>
	<antcall target="compile.test"/>
</target>

		<!-- Distribution Build. -->
<target name="compile.dist" description="compile everything">
	<antcall target="compile.init"/>
	<antcall target="compile.source"/>
</target>

<target name="compile.init" description="compile the source">
	<mkdir dir="${hl7sdk_out}"/>
	<mkdir dir="${hl7sdk_build}"/>
	<copy todir="${hl7sdk_build}">
		<fileset dir="${basedir}">
			<include name="*.properties"/>
			<include name="*.policy"/>
		</fileset>
		<fileset dir="${hl7sdk_src}">
			<include name="**/*.xml"/>
		</fileset>
	</copy>
	<copy todir="${hl7sdk_build}/${hl7sdk_images}">
		<fileset dir="${hl7sdk_images}">
			<include name="**/*"/>
		</fileset>
	</copy>
<!--
	<copy todir="${hl7sdk_build}/license">
		<fileset dir="${hl7sdk_license}">
			<include name="**/*.txt"/>
		</fileset>
	</copy>
-->
</target>

<target name="compile.source" description="compile the source">
	<javac srcdir="${hl7sdk_src}" destdir="${hl7sdk_build}" classpathref="development.class.path"
		   fork="yes" debug="on">
		<exclude name="test/**"/>
	</javac>
</target>

<target name="compile.test" description="compile the tests">
	<javac srcdir="${hl7sdk_src}/test" destdir="${hl7sdk_build}" classpathref="development.class.path"
		   fork="yes" debug="on"/>
</target>

		<!-- Clean Build and JAR 'em up -->
		<!-- This is a DISTRIBUTION TARGET (not a development target!!) -->
<target name="jar" depends="compile.dist" description="create the distribution jars">
	<mkdir dir="${hl7sdk_dist_hl7sdk}/lib"/>
	<jar jarfile="${hl7sdk_dist_hl7sdk}/lib/${distribution_app_name}.jar" basedir="${hl7sdk_build}"
		 excludes="org/hl7/CTSMAPI/**">
		<exclude name="**/*.properties"/>

	</jar>
	<jar destfile="${hl7sdk_dist_hl7sdk}/lib/cts.jar" basedir="${hl7sdk_build}" includes="org/hl7/CTSMAPI/**"/>
	<jar destfile="${hl7sdk_dist_hl7sdk}/lib/javasig.jar" basedir="${javasig_build}">
        <exclude name="**/${cmetfile_properties_file}"/>
    </jar>
    <!-- Create an executable jar that runs the UI.-->
	<jar destfile="${hl7sdk_dist_hl7sdk}/${distribution_app_name}_ui.jar">
		<fileset dir="${hl7sdk_build}" includes="**/LaunchUI.class"/>
		<manifest>
			<attribute name="Main-Class" value="gov.nih.nci.hl7.demo.LaunchUI"/>
			<attribute name="Class-Path" value="${distribution.manifest.class.property}"/>
		</manifest>
	</jar>
</target>


<target name="jar-ws" depends="compile.dist" description="create the distribution jars">
	<mkdir dir="${hl7sdk_dist_hl7sdk}/lib"/>
	<jar jarfile="${hl7sdk_dist_hl7sdk}/lib/${distribution_app_name}.jar" basedir="${hl7sdk_build}"
		 excludes="org/hl7/CTSMAPI/**">
		<exclude name="**/*.properties"/>
	</jar>
	<jar destfile="${hl7sdk_dist_hl7sdk}/lib/cts.jar" basedir="${hl7sdk_build}" includes="org/hl7/CTSMAPI/**"/>
</target>

		<!-- Create the JavaDocumentation -->
<target name="javadoc" description="Create the JavaDocumentation." depends="banner">
	<mkdir dir="${hl7sdk_javadoc}"/>
	<javadoc
			destdir="${hl7sdk_javadoc}"
			bottom="Copyright (c) 2003 Apache Software Foundation"
			maxmemory="256m"
			classpathref="development.class.path">
		<doctitle><![CDATA[<h1>HL7 SDK v${version_number_dot_format} API</h1>]]></doctitle>
		<header><![CDATA[HL7 SDK API]]></header>
		<packageset dir="${hl7sdk_src}" defaultexcludes="yes">
			<include name="gov/**"/>
			<exclude name="test/**"/>
			<include name="org/**"/>
			<exclude name="gov/nih/nci/hl7/object/**"/>
			<exclude name="gov/nih/nci/hl7/adapter/**"/>
		</packageset>
		<sourcepath>
			<pathelement path="${hl7sdk_src}"/>
		</sourcepath>
	</javadoc>
</target>

<target name="gencode.check">
	<echo message="gencode is required if ${hl7sdk_src_gencode} is not available"/>
	<condition property="gencode.found">
		<available file="${hl7sdk_src_gencode}" type="dir"/>
	</condition>
</target>

<target name="gencode" depends="gencode.check" unless="gencode.found" >
	<!-- Generating castor classes -->
	<echo message="Generating castor classes"/>
	<antcall target="gencode.castor"/>
	<!-- Generating config file, defaults to "development"-->
	<echo message="Generating config file"/>
	<antcall target="gencode.config">
		<param name="param1" value="${config.dev.xml}"/>
	</antcall>
	<!-- Generating messages -->
	<echo message="Generating messages"/>
	<antcall target="gencode.messages"/>
</target>

<target name="gencode.castor" description="create config file code">
	<echo message="** Generate castor mapping objects"/>
	<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator"
		  failonerror="true"
		  classpathref="development.class.path">
		<arg line="-f -i ${mappingspec_schema} -dest ${hl7sdk_src_gencode} -package ${mappingspec_package} -binding-file ${castor_binding_file} -verbose"/>
	</java>
	<echo message="** Generate castor csv objects"/>
	<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator"
		  failonerror="true"
		  classpathref="development.class.path">
		<arg line="-f -i ${csvspec_schema} -dest ${hl7sdk_src_gencode} -package ${csvspec_package} -binding-file ${castor_binding_file} -verbose"/>
	</java>
	<echo message="** Generate castor clone objects"/>
	<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator"
		  failonerror="true"
		  classpathref="development.class.path">
		<arg line="-f -i ${clonespec_schema} -dest ${hl7sdk_src_gencode} -package ${clonespec_package} -binding-file ${castor_binding_file} -verbose"/>
	</java>
	<echo message="** Generate castor database objects"/>
	<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator"
		  failonerror="true"
		  classpathref="development.class.path">
		<arg line="-f -i ${dbspec_schema} -dest ${hl7sdk_src_gencode} -package ${dbspec_package} -binding-file ${castor_binding_file} -verbose"/>
	</java>
	<echo message="** Generate castor function objects"/>
	<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator"
		  failonerror="true"
		  classpathref="development.class.path">
		<arg line="-f -i ${functionspec_schema} -dest ${hl7sdk_src_gencode} -package ${functionspec_package} -binding-file ${castor_binding_file} -verbose"/>
	</java>
</target>

<target name="gencode.config" description="create config file code">
	<echo message="Generating config file"/>
	<java fork="yes" classname="net.sf.saxon.Transform" taskname="saxon" failonerror="true"
		  classpathref="development.class.path">
		<arg value="-o"/>
		<arg value="${gencode.out.file}"/>
		<arg value="${param1}"/>
		<arg value="${config.java.transform}"/>
		<arg value="base-path=${hl7sdk_src_gencode}"/>
	</java>
</target>

<target name="gencode.messages" description="create message file code">
	<echo message="Generating message file"/>
	<java fork="yes" classname="net.sf.saxon.Transform" taskname="saxon" failonerror="true"
		  classpathref="development.class.path">
		<arg value="-o"/>
		<arg value="${gencode.out.file}"/>
		<arg value="${messages.xml}"/>
		<arg value="${messages.java.transform}"/>
		<arg value="base-path=${hl7sdk_src_gencode}"/>
	</java>
</target>

<target name="regression">
	<!--        <junit fork="true" printsummary="on" haltonfailure="yes" showoutput="true" maxmemory="512m">-->
	<junit fork="true" printsummary="on" haltonfailure="yes" showoutput="true">
		<formatter type="brief" usefile="false"/>
		<classpath refid="runtime.class.path"/>
		<sysproperty key="ant.library.dir"
					 value="${ant.library.dir}"/>
		<sysproperty key="java.util.logging.config.file"
					 value="${java_logging_file}"/>
		<sysproperty key="java.security.policy"
					 value="${java_policy_file}"/>
		<test name="gov.nih.nci.hl7.RegressionSuite"/>
	</junit>
</target>

<target name="regressionui">
	<!--        <junit fork="true" printsummary="on" haltonfailure="yes" showoutput="true" maxmemory="512m">-->
	<junit fork="true" printsummary="on" haltonfailure="yes" showoutput="true">
		<formatter type="brief" usefile="false"/>
		<classpath refid="runtime.class.path"/>
		<sysproperty key="ant.library.dir"
					 value="${ant.library.dir}"/>
		<sysproperty key="java.util.logging.config.file"
					 value="${java_logging_file}"/>
		<sysproperty key="java.security.policy"
					 value="${java_policy_file}"/>
		<test name="gov.nih.nci.hl7.GUIRegressionSuite"/>
	</junit>
</target>

		<!-- ********************************************************* -->
		<!-- **** COMMON TARGETS ************************************* -->
		<!-- **** These are copied over to \dist\HL7SDK\build.xml **** -->
		<!-- ********************************************************* -->

		<!-- Launch the HL7 Swing mapping utility. -->
<target name="launchui" description="launches the GUI">
	<property name="runtime_path" refid="runtime.class.path"/>
	<echo message="Runtime: ${runtime_path}"/>
	<java fork="true" classname="gov.nih.nci.hl7.ui.MainFrame"
		  failonerror="true"
		  maxmemory="1024m"
		  classpathref="runtime.class.path">
		<sysproperty key="java.util.logging.config.file"
					 value="${java_logging_file}"/>
	</java>
</target>

<target name="helpedit" description="Help Content Manager">
	<java fork="true" classname="gov.nih.nci.hl7.ui.help.HelpContentManager"
		  failonerror="true"
		  maxmemory="1024m"
		  classpathref="development.class.path">
		<sysproperty key="java.util.logging.config.file"
					 value="${java_logging_file}"/>
	</java>
</target>

		<!-- ABSTRACT TARGET - For Validating XML against an XSD -->
<target name="xsdValidation">
	<java fork="yes" classname="gov.nih.nci.hl7.validation.XMLValidator"
		  failonerror="true"
		  classpathref="development.class.path">
		<sysproperty key="java.util.logging.config.file"
					 value="${java_logging_file}"/>
		<arg value="${param1}"/>
		<arg value="${param2}"/>
	</java>
</target>

		<!-- ABSTRACT TARGET - For Comparing two XML documents-->
<target name="xmlDiff">
	<java fork="yes" classname="gov.nih.nci.hl7.BaseXMLTestCase"
		  failonerror="true"
		  classpathref="development.class.path">
		<sysproperty key="java.util.logging.config.file"
					 value="${java_logging_file}"/>
		<arg value="${param1}"/>
		<arg value="${param2}"/>
	</java>
</target>

		<!-- Test target for mapping scenarios -->
<target name="scenarios">
	<java fork="yes" classname="gov.nih.nci.hl7.map.TestMappingScenarios"
		  failonerror="true"
		  classpathref="runtime.class.path">
		<sysproperty key="java.util.logging.config.file"
					 value="${java_logging_file}"/>
	</java>
</target>

<target name="performance" description="tests the performance of the transformationservice">
	<java fork="true" classname="gov.nih.nci.hl7.map.TestTransformationPerformance"
		  failonerror="true"
		  maxmemory="1024m"
		  classpathref="runtime.class.path">
		<sysproperty key="java.util.logging.config.file"
					 value="${java_logging_file}"/>
	</java>
</target>

	<!-- ************************************************************************************************-->
	<!--                                             Add License  			                       -->
	<!-- ************************************************************************************************-->
	<target name="add-license">
		<echo message="*****************************************************"/>
		<echo message="**   Adding licenses ... ...                       **"/>
		<echo message="*****************************************************"/>
		<mkdir dir="${hl7sdk_build}"/>
		<javac srcdir="${hl7sdk_src}" destdir="${hl7sdk_build}" classpathref="development.class.path"
		   fork="yes" debug="on">
			<include name="**/codegen/**"/>
		</javac>
		<taskdef name="update-license" classname="gov.nih.nci.codegen.core.ant.LicenseUpdaterTask">
			<classpath refid="development.class.path"/>
		</taskdef>
		<!--echo message="${properties.dir}/license.txt"/-->
		<update-license logFile="log/addlicense.log" beginPattern="LICENSE_TEXT_START" endPattern="LICENSE_TEXT_END" licenseFile="${hl7sdk_license}/caAdapter_license.txt">
			<fileset dir="${hl7sdk_src}">
				<include name="**/**.java"/>
			</fileset>
		</update-license>
	</target>
