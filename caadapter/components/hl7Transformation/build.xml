<?xml version="1.0"?>
<project name="caadapter.hl7.transformation" default="build" basedir=".">
	<description>
					caAdapter component:  HL-7 Transformation
		************************************************************************** 
		caAdapter hl7Transformation module                          
		************************************************************************** 
	</description>	

	<!-- Define module properties !-->
	<property name="hl7.module.home" value="${basedir}"/>
	<property name="hl7.module.dist.name" value="caadapterHl7.jar"/>
	<property name="module.name" value="${ant.project.name}"/>
	<property name="hl7.module.dist.name" value="caadapterCommon.jar"/>
	<property name="module.build.dir" value="${hl7.module.home}/build"/>
	<property name="module.dist.dir" value="${hl7.module.home}/dist"/>
	<property name="module.lib.dir" value="${hl7.module.home}/lib"/>

	<!-- Define project properties !-->
	<property name="caadapter.project.lib.dir" value="${hl7.module.home}/../../lib"/>
	<property name="caadapter.project.schema.dir" value="${hl7.module.home}/../../etc"/>
	<property name="caadapter.project.dist.dir" value="${hl7.module.home}/../../dist"/>
	<property name="caadapter.project.conf.dir" value="${hl7.module.home}/../../conf"/>
	<property name="caadapter.project.ref.lib.dir" value="${hl7.module.home}/../../referenceLib"/>
	
	<property name="module.conf.dir" value="${hl7.module.home}/conf"/>
	<property name="module.etc.dir" value="${hl7.module.home}/etc"/>
	<property name="module.src.dir" value="${hl7.module.home}/src"/>
	<property name="module.lib.dir" value="${hl7.module.home}/lib"/>

	<!-- define castor code generation properties -->
	<property name="castor.gencode.dir" value="${hl7.module.home}/gencode"/>
	<property name="castor_binding_file" value="${caadapter.project.conf.dir}/castorbinding.xml"/>
	<property name="mappingspec_schema" value="${caadapter.project.schema.dir}/map/MappingV4.0.xsd"/>
	<property name="mappingspec_package" value="gov.nih.nci.caadapter.castor.map.impl"/>
	<property name="clonespec_schema" value="${caadapter.project.schema.dir}/map/clone/clonespecification.xsd"/>
	<property name="clonespec_package" value="gov.nih.nci.caadapter.castor.clone.meta.impl"/>
	<property name="dbspec_schema" value="${caadapter.project.schema.dir}/map/database/dbspecification.xsd"/>
	<property name="dbspec_package" value="gov.nih.nci.caadapter.castor.database.impl"/>

	<path id="module.class.path">
		<fileset dir="${module.lib.dir}">
			<include name="**/*.jar"/>
			<include name="**/*.zip"/>
		</fileset>
		<fileset dir="${caadapter.project.lib.dir}">
			<include name="**/*.jar"/>
			<include name="**/*.zip"/>
			<exclude name="caAdapter.jar"/>
		</fileset>
		<fileset dir="${caadapter.project.dist.dir}">
			<include name="**/*.jar"/>
		<include name="**/*.zip"/>
		</fileset>
		<fileset dir="${caadapter.project.ref.lib.dir}">
				<include name="**/*.jar"/>
				<include name="**/*.zip"/>
		</fileset>
	</path>

	<path id="castor.gencode.path">
		<pathelement location="${caadapter.project.ref.lib.dir}/castor-0.9.9.jar"/>
		<pathelement location="${module.lib.dir}/commons-logging-1.0.4.jar"/>
		<pathelement location="${module.lib.dir}/xercesImpl.jar"/>
	</path>

	<target name="build" depends="jar" description="deliever the module jar">
		<echo message="-- delivere ${module.name}  --------"/>
		<copy file="${module.dist.dir}/${hl7.module.dist.name}" 
				tofile="${caadapter.project.dist.dir}/${hl7.module.dist.name}"/>
		<copy file="${module.dist.dir}/cts.jar" 
			tofile="${caadapter.project.dist.dir}/cts.jar"/>
	</target>

	<target name="jar" depends="compile" description="create the distribution jars">
		<jar destfile="${module.dist.dir}/${hl7.module.dist.name}">
			<fileset dir="${module.build.dir}"
				excludes="**/Test.class,org/hl7/**"/>
			<fileset dir="${module.conf.dir}"/>
			<fileset dir="${module.etc.dir}"/>
		</jar>
		<jar destfile="${module.dist.dir}/cts.jar" 
					basedir="${module.build.dir}/" 
			includes="org/hl7/**"/>
	</target>

	<target name="compile" depends="gencode" description="compile hl7Transformation source">
		<javac destdir="${module.build.dir}" 
				classpathref="module.class.path"
				fork="yes" debug="on">
			<src path="${module.src.dir}"/>
			<src path="${castor.gencode.dir}"/>
			<exclude name="test/**"/>
		</javac>
	</target>

	<target name="gencode.check">
		<echo message="gencode is required if ${castor.gencode.dir} is not available"/>
		<condition property="gencode.found">
			<available file="${castor.gencode.dir}" type="dir"/>
		</condition>
	</target>

	<target name="gencode" depends="init, gencode.check"  unless="gencode.found" >
		<!-- Generating castor classes -->
		<echo message="Generating castor classes"/>
		<antcall target="gencode.castor"/>
	</target>

	<target name="gencode.castor" description="create generate hl7 code files with castor">
		<echo message="** Generate castor mapping objects"/>
		<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator"
				failonerror="true"
				classpathref="castor.gencode.path">
			<arg line="-f -i ${mappingspec_schema} -dest ${castor.gencode.dir} -package ${mappingspec_package} -binding-file ${castor_binding_file} -verbose"/>
		</java>
		<!--		
		<echo message="** Generate castor clone objects"/>
		<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator"
				failonerror="true"
				classpathref="castor.gencode.path">
			<arg line="-f -i ${clonespec_schema} -dest ${castor.gencode.dir} -package ${clonespec_package} -binding-file ${castor_binding_file} -verbose"/>
		</java>
		
		<echo message="** Generate castor database objects"/>
		<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator"
				failonerror="true"
				classpathref="castor.gencode.path">
			<arg line="-f -i ${dbspec_schema} -dest ${castor.gencode.dir} -package ${dbspec_package} -binding-file ${castor_binding_file} -verbose"/>
		</java>
		
		-->
		<!-- moved to "common module" echo message="** Generate castor csv objects"/ -->
		<!-- java fork="yes" classname="org.exolab.castor.builder.SourceGenerator"
				failonerror="true"
				classpathref="castor.gencode.path">
			<arg line="-f -i ${csvspec_schema} -dest ${castor.gencode.dir} -package ${csvspec_package} -binding-file ${castor_binding_file} -verbose"/>
		</java -->
		<!-- moved to "common module" echo message="** Generate castor function objects"/ -->
		<!-- java fork="yes" classname="org.exolab.castor.builder.SourceGenerator"
				failonerror="true"
				classpathref="castor.gencode.path">
			<arg line="-f -i ${functionspec_schema} -dest ${castor.gencode.dir} -package ${functionspec_package} -binding-file ${castor_binding_file} -verbose"/>
		</java -->
	</target>

	<target name="init">
		<echo message="-------- initialize ${module.name}  --------"/>
		<mkdir dir="${module.build.dir}"/>
		<mkdir dir="${module.dist.dir}"/>
	</target>

	<target name="clean">
		<echo message="-------- clean ${module.name}  --------"/>
		<delete dir="${module.build.dir}"/>
		<delete dir="${module.dist.dir}"/>
		<delete dir="${castor.gencode.dir}"/>
	</target>
</project>
