<?xml version="1.0"?>
<mapping version="1.2">
<!--
    ** BEGIN OLD 1.1 NOTES - They may or may not be relevent anymore **
    Rule 1: Every clonename for the HL7 RMIM should exist. If not, this clonename related info will be ignored
    even next level clonename exited. Otherwise, RimGraphBuilder can not manage the recursive relationship??.

    Rule 2: Most of the time, datatype's field name is matched with data type xml schema's attribute name.
    If the data is existed in the xml text node, use field name "inlineText" instead.

    Rule 3: subClass
         if RMIM RIM class attribute data type is abstract, such as ANY, it should add the attribute subClass="PQ"
         at the datatype element in the mapping file.

    Rule 4: IVL
        highClosed
        lowClosed
    ** END OLD 1.1 NOTES **

-->

<!--
    Consider add UUID field at CSVFieldMeta interface, which can be referenced by Mapping file, which will resolve the
    synchronization problem if mapping is 80% done and user goes back to change the CSV meta file.
-->
<components>
        <!-- A component is an instance of a particular data. -->
        <component uuid="1111A" type="source" kind="scm" location="C:\projects\hl7sdk\map\csv\csvspecification.scm"/>
        <!-- when type="scm" the location attribute contains a reference to a file

    <component uuid="2222B" type="source" kind="scm" location="C:\projects\hl7sdk\map\csv\csvspecification.scm"/>-->

        <!-- is this needed? we're making a special case of HL7 data that
        we have our own structure for in the "hl7meta" tag. -->
        <!-- when type="HL7v3" the value attribute contains a messagetypeid -->
        <component uuid="3333C" type="target" kind="HL7v3" location="C:\projects\hl7sdk\map\clone\clonespecification.h3s"/>

        <!-- A function component is an algorithm between two (or more) pieces of data. -->
        <component uuid="4444D" type="function" kind="core" group="string" name="concat"/>

        <component uuid="1986D" type="function" kind="core" group="string" name="constant">
			<data value="asdf12/3ff" type="String"/>
		</component>
            <!--                Those inputs/outputs information already in Function Definition File                    -->
            <!--                <inputs>-->
            <!--                    <datapoint pos="0" name="string1" datatype="string" uuid="ABCDEF44444444"/>-->
            <!--                    <datapoint pos="1" name="string2" datatype="string" uuid="ABCDEF55555555"/>-->
            <!--                </inputs>-->
            <!--                <outputs>-->
            <!--                    <datapoint pos="0" name="output" datatype="string" uuid="ABCDEF6666666"/>-->
            <!--                </outputs>

        </component>-->


        <component uuid="5555E" type="function" kind="core" group="string" name="split"/>
<!--            <data>
                <constant uuid="ACCDFFFX" value="5" type="integor"/>
            </data>-->
            <!--            <function name="split" uuid="888ASD7">-->
            <!--                <inputs>-->
            <!--                    <datapoint pos="0" name="string1" datatype="string" uuid="ACCDFFFF"/>-->
            <!--                    <datapoint pos="1" name="int1" value="2" datatype="int" uuid="ACCDFFFX"/>-->
            <!--                </inputs>-->
            <!--                <outputs>-->
            <!--                    <datapoint pos="0" name="output1" datatype="string" uuid="FFFDFF"/>-->
            <!--                    <datapoint pos="1" name="output2" datatype="string" uuid="QQQQQQ"/>-->
            <!--                </outputs>-->
            <!--                <implementation classname="gov.nih.nci.hl7.function.StringFunction" method="split"/>-->
            <!--            </function>            
        </component>-->

    </components>

    <links>

        <!-- Direct Map -->
        <link uuid="12345A">
            <linkpointer component-uuid="1111A" data-uuid="AAAAAAAAAAAAAAAAAAA"/>
            <linkpointer component-uuid="3333B" data-uuid="1111111128"/>
        </link>

        <!-- Direct Map -->
        <link uuid="98457A">
            <linkpointer component-uuid="1111C" data-uuid="BBBBBBBBBBBBBBBBBBB"/>
            <linkpointer component-uuid="3333D" data-uuid="1111111133"/>
        </link>

        <!-- Funtion Map Inputs-->
        <link uuid="map003">
            <linkpointer component-uuid="1111E" data-uuid="1111ABCDEFGH"/>
            <linkpointer component-uuid="4444F" data-uuid="ABCDEF44444444"/>
        </link>

        <link uuid="map004">
            <linkpointer component-uuid="1111G" data-uuid="1111ABCDEFGH"/>
            <linkpointer component-uuid="4444H" data-uuid="ABCDEF55555555"/>
        </link>

        <!-- Funtion Map Outputs-->
        <link uuid="map005">
            <linkpointer component-uuid="4444I" data-uuid="ABCDEF6666666"/>
            <linkpointer component-uuid="3333J" data-uuid="1111111114"/>
        </link>

    </links>
    <views>
        <view component-uuid="4444A" x="0" y="0" width="100" height="50" color="black"/>
        <view component-uuid="5555B" x="200" y="200"/>
        <view component-uuid="4444C" width="100" height="50" color="black"/>
    </views>
</mapping>