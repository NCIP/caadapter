<project name="CMPS" default="compile" basedir=".">

	<!-- Tell ant to use my environment variables -->
	<property environment="env" />

	<property file="./build.properties" />
	<property name="build.compiler" value="modern" />
	<path id="project.class.path">
		<fileset dir="./lib">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>
		<!-- pathelement path="${src.dir}" /-->
	</path>

	<pathconvert pathsep=" " targetos="unix" property="distribution.manifest.class.property" refid="project.class.path">
		<!-- make paths relative-->
		<map from="${basedir}/lib" to="." />
		<map from="${basedir}" to="." />
	</pathconvert>


	<target name="clean">
		<delete dir="${build.dir}" includeEmptyDirs="true" />
		<delete dir="${dist.dir}" includeEmptyDirs="true" />
		<delete>
			<fileset dir="." includes="*.zip" />
		</delete>
	</target>

	<target name="prep">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
		<tstamp>
			<format property="DATE" pattern="MM-dd-yy" locale="en_us" />
		</tstamp>
	</target>

	<target name="codegen">
		<!-- xjc schema="etc/schema/dataModel.xsd" target="src" /-->
		<exec executable="xjc">
			<arg value="-d" />
			<arg value="src" />
			<arg value="-xmlschema" />
			<arg value="etc/schema/dataModel.xsd" />
		</exec>
	</target>
	<target name="compile" depends="prep">
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="on" deprecation="on">
			<include name="**/*.java" />
			<classpath refid="project.class.path" />
		</javac>
	</target>

	<target name="compile-test" depends="compile">
		<javac srcdir="${test.dir}" destdir="${build.dir}" debug="on" deprecation="on">
			<include name="**/*.java" />
			<classpath>
				<path refid="project.class.path" />
				<pathelement location="${build.dir}" />
			</classpath>
		</javac>
	</target>
	<target name="test" depends="compile-test">
		<junit>
			<classpath>
				<path refid="project.class.path" />
				<pathelement location="${build.dir}" />
			</classpath>

			<formatter type="plain" />

			<!-- test name="gov.nih.nci.cbiit.cmps.test.MappingTest" haltonfailure="no" outfile="result">
				<formatter type="xml" />
			</test -->

			<batchtest fork="yes" todir="bin">
				<formatter type="xml" />
				<fileset dir="${test.dir}">
					<include name="**/*Test*.java" />
					<exclude name="**/AllTests.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="doc" description="Generate JavaDoc">
		<mkdir dir="${javadoc.dir}" />
		<javadoc destdir="${javadoc.dir}" author="true" version="true" use="true" windowtitle="CMPS">

			<packageset dir="${src.dir}" defaultexcludes="yes">
				<include name="gov/nih/nci/cbiit/cmps/**" />
			</packageset>

			<doctitle>
				CMPS
			</doctitle>
			<bottom>

			</bottom>
			<tag name="todo" scope="all" description="To do:" />
			<link href="http://java.sun.com/javase/6/docs/api/" />
		</javadoc>
	</target>

	<target name="jar" depends="compile" description="create the distribution jars">
		<echo> ${distribution.manifest.class.property} </echo>
		<!-- copy todir="${build.dir}">
			<fileset dir="resources">
				<exclude name="**/CVS/**" />
			</fileset>
		</copy -->
		<jar destfile="${dist.dir}/cmps.jar">
			<fileset dir="${build.dir}" excludes="**/Test.class **/ui/**" />
			<!-- fileset dir="${basedir}" includes="config/*.*" /-->
			<!-- fileset dir="${etc.dir}" excludes="**/ucum-expression.xml" /-->
			<!-- fileset dir="${src.dir}" excludes="**/*.java" /-->
		</jar>
		<jar destfile="${dist.dir}/cmps-resources.jar">
			<fileset dir="resources" excludes="**/CVS/**" />
		</jar>
		<jar destfile="${dist.dir}/cmpsUI.jar">
			<fileset dir="${build.dir}" includes="**/ui/**" />
			<manifest>
				<attribute name="Main-Class" value="gov.nih.nci.cbiit.cmps.ui.mapping.MainFrame" />
				<attribute name="Class-Path" value=". cmps.jar cmps-resources.jar ${distribution.manifest.class.property}" />
			</manifest>
		</jar>
	</target>

	<target name="dist-bin" depends="jar" description="create the binary distribution">
		<copy todir="${dist.dir}">
			<fileset dir="${lib.dir}">
				<include name="**" />
			</fileset>
			<fileset dir="${basedir}">
				<include name="workingspace/**" />
			</fileset>
		</copy>
		<zip destfile="cmps__1_0_Bin_${DATE}.zip" basedir="${dist.dir}">
		</zip>
	</target>
	
	<target name="dist-src" depends="clean, prep" description="create the source distribution">
		<zip destfile="cmps__1_0_Src_${DATE}.zip" basedir="${basedir}">
			<exclude name="bin/**" />
			<exclude name="build/**" />
			<exclude name="dist/**" />
			<exclude name="**/CVS/**" />
		</zip>
	</target>

	<target name="main" depends="clean, prep, compile, jar" />

</project>
